<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zen.model.manage.mapper.ModelInfoMapper">
    <!-- 在更新时使用，包含小数点 -->
    <sql id="updateTimeTemplate">
        ,updateTime = now()
    </sql>
    <insert id="insert" parameterType="com.zen.model.manage.bean.ModelInfo">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into model_info (token, hdfsPath, modelType,
        createTime, updateTime, version,
        creator, source, description,
        online, poolSize, warmUpFeature
        )
        values (#{token,jdbcType=VARCHAR}, #{hdfsPath,jdbcType=VARCHAR},
        #{modelType,jdbcType=VARCHAR},
        #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{version,jdbcType=INTEGER},
        #{creator,jdbcType=VARCHAR}, #{source,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},
        #{online}, #{poolSize,jdbcType=INTEGER}, #{warmUpFeature,jdbcType=VARCHAR})
    </insert>
    <delete id="deleteModelById">
        DELETE FROM model_info WHERE id = #{id}
    </delete>

    <select id="findLastOnlineModelByToken" parameterType="string" resultType="com.zen.model.manage.bean.ModelInfo">
        select * from model_info where token = #{token} and online = true order by id desc limit 1
    </select>
    <select id="findModelByTokeAndVersion" resultType="com.zen.model.manage.bean.ModelInfo">
        select * from model_info where token = #{token} and version = #{version}
    </select>
    <select id="findModelByToken" resultType="com.zen.model.manage.bean.ModelInfo">
        select * from model_info where token = #{token}
    </select>
    <select id="getModelsByStatus" resultType="com.zen.model.manage.bean.ModelInfo">
        select * from model_info
        <where>
            <if test="online != null">online = #{online}</if>
        </where>
    </select>

    <update id="updateLastModel">
        update model_info set online = false
        <include refid="updateTimeTemplate"/>
        where id = #{id}
    </update>
    <update id="offlineModel">
        update model_info set online = false
        <include refid="updateTimeTemplate"/>
        where token = #{token} and online = true
    </update>
    <update id="offlineModelByTokenAndVersion">
        update model_info set online = false
        <include refid="updateTimeTemplate"/>
        where token = #{token} and version = #{version}
    </update>
    <update id="onlineModel">
        update model_info set online = true
        <include refid="updateTimeTemplate"/>
        where token = #{token} and version = #{version}
    </update>
</mapper>
